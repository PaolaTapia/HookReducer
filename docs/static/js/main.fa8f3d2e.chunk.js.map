{"version":3,"sources":["Componentes/08-useReducer/TodoAdd.js","hooks/useForm.js","Componentes/08-useReducer/TodoListItem.js","Componentes/08-useReducer/ToDoList.js","Componentes/08-useReducer/toDoReducer.js","Componentes/08-useReducer/TodoApp.js","index.js"],"names":["TodoAdd","handleAddToDo","initialState","useState","values","setValues","reset","handledInputChange","target","name","value","useForm","description","onSubmit","e","preventDefault","trim","length","newToDo","id","Date","getTime","desc","done","type","className","placeholder","autoComplete","onChange","TodoListItem","toDos","handleDelete","handleToggle","map","toDo","i","key","onClick","ToDoList","toDoReducer","state","action","payload","filter","TodoApp","useReducer","JSON","parse","localStorage","getItem","dispatch","useEffect","setItem","stringify","toDoId","ReactDOM","render","document","getElementById"],"mappings":"wMAGaA,EAAU,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,ECCrB,WAAsB,IAArBC,EAAoB,uDAAP,GAAO,EAIXC,mBAASD,GAJE,mBAIhCE,EAJgC,KAIxBC,EAJwB,KAMjCC,EAAO,WACRD,EAAUH,IAGTK,EAAoB,SAAC,GAAY,IAAXC,EAAU,EAAVA,OACvBH,EAAU,2BACFD,GADC,kBAEHI,EAAOC,KAAOD,EAAOE,UAIhC,MAAO,CAACN,EAAQG,EAAoBD,GDjBeK,CAAQ,CACtDC,YAAa,KAFqB,mBAC/BA,EAD+B,KAC/BA,YAAcL,EADiB,KACGD,EADH,KAmB1C,OACE,oCACE,4CAEA,6BACA,0BAAMO,SAnBS,SAACC,GAEjB,GADAA,EAAEC,mBACCH,EAAYI,OAAOC,QAAQ,GAA9B,CAGA,IAAMC,EAAU,CACXC,IAAI,IAAIC,MAAOC,UACfC,KAAM,YAAaV,EACnBW,MAAM,GAEXtB,EAAciB,GACdZ,OASG,2BACEkB,KAAK,OACLf,KAAK,cACLgB,UAAU,eACVC,YAAY,cACZC,aAAa,MACbC,SAAUrB,EACVG,MAAOE,IAET,4BACEY,KAAK,SACLC,UAAU,0CAFZ,cEnCKI,EAAe,SAAC,GAAyC,IAAxCC,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,aAE9C,OACK,oCACCF,EAAMG,KAAI,SAACC,EAAMC,GAAP,OACX,wBAAIC,IAAKF,EAAKf,GAAIM,UAAU,mBACvB,uBACKA,UAAS,UAAKS,EAAKX,MAAQ,YAC3Bc,QAAU,kBAAIL,EAAcE,EAAKf,MACpCgB,EAAI,EAHN,IAGUD,EAAKZ,MACf,4BACAe,QAAS,kBAAIN,EAAaG,EAAKf,KAC/BM,UAAU,kBAFV,gBCTFa,EAAW,SAAC,GAAuC,IAAtCR,EAAqC,EAArCA,MAAME,EAA+B,EAA/BA,aAAaD,EAAkB,EAAlBA,aACxC,OAEK,wBAAIN,UAAU,+BACd,kBAAC,EAAD,CACKM,aAAcA,EACdC,aAAcA,EACdF,MAAOA,M,OCVTS,EAAc,WAAuB,IAAtBC,EAAqB,uDAAb,GAAIC,EAAS,uCAE5C,OAAQA,EAAOjB,MACV,IAAK,MACA,MAAM,GAAN,mBAAWgB,GAAX,CAAkBC,EAAOC,UAC9B,IAAK,SACA,OAAOF,EAAMG,QAAO,SAAAT,GAAI,OAAGA,EAAKf,KAAKsB,EAAOC,WACjD,IAAK,SACA,OAAOF,EAAMP,KAAI,SAAAC,GAAI,OACfA,EAAKf,KAAKsB,EAAOC,QAAlB,YAAC,eACKR,GADN,IACYX,MAAOW,EAAKX,OACtBW,KAWZ,QACK,OAAOM,ICjBTI,EAAU,WAClB,IADwB,EAMEC,qBAAWN,EAAY,IALrC,WACP,OAAOO,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,MAFjC,mBAMjBnB,EANiB,KAMVoB,EANU,KAQxBC,qBAAU,WACTH,aAAaI,QAAQ,QAASN,KAAKO,UAAUvB,MAC3C,CAACA,IA0BP,OACE,6BACE,wCAAcA,EAAMb,OAApB,KACA,6BACD,yBAAKQ,UAAU,OACf,yBAAKA,UAAU,SACV,kBAAC,EAAD,CACKK,MAAOA,EACPC,aAhCU,SAACuB,GAKrBJ,EAJc,CACT1B,KAAM,SACNkB,QAASY,KA8BJtB,aAzBU,SAACsB,GACrBJ,EAAS,CACJ1B,KAAM,SACNkB,QAASY,QAyBb,yBAAK7B,UAAU,SACX,kBAAC,EAAD,CACKxB,cAvBQ,SAACiB,GACnBgC,EAAS,CACJ1B,KAAM,MACNkB,QAASxB,WCnBnBqC,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.fa8f3d2e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\n\r\nexport const TodoAdd = ({handleAddToDo}) => {\r\n     const [{description}, handledInputChange, reset] = useForm({\r\n          description: '',\r\n     });   \r\n\r\nconst handleSubmit = (e) => {\r\n     e.preventDefault(); \r\n     if(description.trim().length<=1){\r\n          return; \r\n     }\r\n     const newToDo = {\r\n          id: new Date().getTime(),\r\n          desc: 'Aprender '+ description,\r\n          done: false\r\n     }\r\n     handleAddToDo(newToDo); \r\n     reset();     \r\n}\r\n     \r\n  return (\r\n    <>\r\n      <h4>Agregar ToDo</h4>\r\n\r\n      <hr />\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"description\"\r\n          className=\"form-control\"\r\n          placeholder=\"Aprender...\"\r\n          autoComplete=\"off\"\r\n          onChange={handledInputChange}\r\n          value={description}\r\n        />\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-outline-primary mt-1 btn-block\"\r\n        >\r\n          Agregar\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","import { useState } from \"react\"; \r\n\r\n//recibe un objeto, las propiedades son un campo de un formulario\r\n\r\nexport const useForm = (initialState={}) => {\r\n\r\n     //Aquí podría mandar datos de validación\r\n    \r\n     const [values, setValues] = useState(initialState); \r\n\r\n     const reset =()=> {\r\n          setValues(initialState); \r\n     }\r\n\r\n     const handledInputChange= ({target})=>{     \r\n          setValues({\r\n               ...values, \r\n               [target.name]: target.value\r\n          });           \r\n     }\r\n\r\n     return [values, handledInputChange, reset]; \r\n\r\n}\r\n","import React from 'react'; \r\n\r\nexport const TodoListItem = ({toDos, handleDelete, handleToggle}) => {\r\n     \r\n     return (\r\n          <>\r\n          {toDos.map((toDo, i) => (\r\n          <li key={toDo.id} className=\"list-group-item\">\r\n               <p \r\n                    className={`${toDo.done && 'complete'}`}\r\n                    onClick={ ()=>handleToggle (toDo.id)}\r\n               >{i + 1}.{toDo.desc}</p>\r\n               <button \r\n               onClick={()=>handleDelete(toDo.id)}\r\n               className=\"btn btn-danger\"\r\n               >Borrar</button>\r\n          </li>\r\n          ))}\r\n          </>\r\n     )\r\n}\r\n","import React from 'react'; \r\nimport { TodoListItem } from './TodoListItem'; \r\n\r\nexport const ToDoList = ({toDos,handleToggle,handleDelete}) => {\r\n     return (         \r\n\r\n          <ul className=\"list-group list-group-flush\">         \r\n          <TodoListItem  \r\n               handleDelete={handleDelete} \r\n               handleToggle={handleToggle} \r\n               toDos={toDos} \r\n          />\r\n         \r\n          </ul>\r\n\r\n     )\r\n}\r\n","export const toDoReducer = (state = [], action)=>{\r\n\r\n     switch (action.type) {\r\n          case 'add':\r\n               return [...state, action.payload];     \r\n          case 'delete':\r\n               return state.filter(toDo=> toDo.id!==action.payload); \r\n          case 'toggle':\r\n               return state.map(toDo=>\r\n                    (toDo.id===action.payload)\r\n                    ? {...toDo, done: !toDo.done}\r\n                    : toDo\r\n               )\r\n               /*return state.map((toDo)=>{\r\n                    if(toDo.id === action.payload){\r\n                         return{\r\n                              ...toDo,done: !toDo.done\r\n                         }\r\n                    }else {\r\n                        return toDo;  \r\n                    }\r\n               }); */\r\n          default:\r\n               return state; \r\n     }\r\n     \r\n}\r\n\r\n","import React, { useEffect, useReducer } from \"react\";\r\nimport \"./styles.css\";\r\nimport { TodoAdd } from \"./TodoAdd\";\r\nimport { ToDoList } from \"./ToDoList\";\r\nimport { toDoReducer } from \"./toDoReducer\";\r\n\r\nexport const TodoApp = () => { \r\n     const init= () => {\r\n          return JSON.parse(localStorage.getItem('toDos')) || []; \r\n\r\n     }\r\n\r\n     const [toDos, dispatch] = useReducer(toDoReducer,[], init);\r\n\r\n     useEffect(() => {\r\n      localStorage.setItem('toDos', JSON.stringify(toDos)); \r\n     }, [toDos])\r\n\r\n     const handleDelete =(toDoId)=>{\r\n     const action ={\r\n          type: 'delete',\r\n          payload: toDoId\r\n     }\r\n     dispatch(action);\r\n     }\r\n\r\n     const handleToggle =(toDoId) =>{\r\n     dispatch({\r\n          type: 'toggle',\r\n          payload: toDoId\r\n     });       \r\n  }\r\n\r\n  const handleAddToDo= (newToDo) => {  \r\n     dispatch({\r\n          type: 'add',\r\n          payload: newToDo\r\n     });\r\n  }\r\n\r\n \r\n\r\n  return (\r\n    <div>\r\n      <h1>TodoApp ({toDos.length})</h1>\r\n      <hr />\r\n     <div className=\"row\">\r\n     <div className=\"col-7\">\r\n          <ToDoList \r\n               toDos={toDos} \r\n               handleDelete={handleDelete} \r\n               handleToggle={handleToggle}\r\n          />\r\n      </div>\r\n      <div className=\"col-5\">\r\n          <TodoAdd \r\n               handleAddToDo={handleAddToDo}\r\n          />\r\n      </div>\r\n     </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import { CallbackHook } from './Componentes/06-memos/CallbackHook';\n//import { Padre } from './Componentes/07-tarea-memo/Padre';\nimport { TodoApp } from './Componentes/08-useReducer/TodoApp';\n//import { FormWithCustomHook } from './Componentes/01-useState/02-useEffect/FormWithCustomHook';\n//import { MultipleCustomHooks } from './Componentes/01-useState/03-examples/MultipleCustomHooks';\n//import { FocusScreen } from './Componentes/04-useRef/FocusScreen';\n//import { RealExampleRef } from './Componentes/04-useRef/RealExampleRef';\n//import { Layout } from './Componentes/05-useLayouteffect/Layout';\n//import { Memorize } from './Componentes/06-memos/Memorize';\n//import { SimpleForm } from './Componentes/01-useState/02-useEffect/SimpleForm';\n//import CounterApp from './Componentes/01-useState/CounterApp';\n//import CounterWithCustomHook from './Componentes/01-useState/CounterWithCustomHook';\n//import HookApp from './HookApp';\n\n\nReactDOM.render(  \n    <TodoApp />,  \n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}